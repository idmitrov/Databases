# Index:

	database index is a data structure that improves the speed of data
	etrieval operations on a database table at the cost of additional writes and storage space to maintain the index data structure. 
	Indexes are used to quickly locate data without having to search every row in a database table every time a database table is accessed.
	Indexes can be created using one or more columns of a database table, 
	providing the basis for both rapid random lookups and efficient access of ordered records.
	An index is a copy of select columns of data from a table that can be searched very efficiently that also includes
	a low-level disk block address or direct link to the complete row of data it was copied from.

# Clustered index:

	Clustered indexes sort and store the data rows in the table or view based on their key values. 
	These are the columns included in the index definition. There can be only one clustered index per table,
	because the data rows themselves can be sorted in only one order.
	The only time the data rows in a table are stored in sorted order is when the table contains a clustered index. 
	When a table has a clustered index, the table is called a clustered table. 
	If a table has no clustered index, its data rows are stored in an unordered structure called a heap.


# B-tree:

	B-tree is a tree data structure that keeps data sorted and allows searches, sequential access, insertions, and deletions in logarithmic time. 
	The B-tree is a generalization of a binary search tree in that a node can have more than two children (Comer 1979, p. 123). 
	Unlike self-balancing binary search trees, the B-tree is optimized for systems that read and write large blocks of data. 
	It is commonly used in databases and filesystems.

# Column store index:

	A columnstore index is a technology for storing, retrieving and managing data by using a columnar data format, called a columnstore.

#Full-text search index:

	MySQL has support for full-text indexing and searching:
	A full-text index in MySQL is an index of type FULLTEXT.
	Full-text indexes can be used only with MyISAM tables, and can be created only for CHAR, VARCHAR, or TEXT columns.
	A FULLTEXT index definition can be given in the CREATE TABLE statement when a table is created, 
	or added later using ALTER TABLE or CREATE INDEX.
	For large data sets, it is much faster to load your data into a table that has no FULLTEXT index 
	and then create the index after that, than to load data into a table that has an existing FULLTEXT index.

# Spatial index:

	A spatial index is defined on a table column that contains spatial data (a spatial column). 
	Each spatial index refers to a finite space. For example, 
	an index for a geometry column refers to a user-specified rectangular area on a plane.